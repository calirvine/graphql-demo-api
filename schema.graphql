### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""The union of copy, image, and url blocks"""
union Block = CopyBlock | ImageBlock | LinkBlock

input BlockFilterInputs {
  include: [String!]
}

"""A title and some text"""
type CopyBlock {
  copy: String
  id: ID
  title: String
}

input CopyInputs {
  copy: String!
  title: String!
}

"""Date custom scalar type"""
scalar Date

type Image {
  id: ID!
  previewDataUri: String!
  srcPath: String!
}

"""All of the elements needed to make an image"""
type ImageBlock {
  altText: String
  id: ID
  image: Image
  link: LinkBlock
}

input ImageInputs {
  altText: String!
  assetId: String!
  link: LinkInputs
  title: String!
}

scalar Json

type LinkBlock {
  id: ID
  label: String
  title: String
  url: String
}

input LinkInputs {
  label: String!
  title: String!
  url: String!
}

type Mutation {
  createCopy(CopyInputs: CopyInputs!): CopyBlock
  createImage(ImageInputs: ImageInputs!): ImageBlock
  createLink(LinkInputs: LinkInputs!): LinkBlock
  deleteCopyBlock(id: String!): Boolean
  deleteImageBlock(id: String!): Boolean
  deleteLinkBlock(id: String!): Boolean
  updateCopyBlock(CopyInputs: CopyInputs!, id: String!): CopyBlock
  updateImageBlock(id: String!, ImageInputs: ImageInputs!): ImageBlock
  updateLinkBlock(id: String!, LinkInputs: LinkInputs!): LinkBlock
}

"""Cursors and page info for paginated requests"""
type PageInfo {
  count: Int
  endCursor: String
  hasNextPage: Boolean
}

"""Cursor based pagination of blocks"""
type PaginatedBlocks {
  nodes: [Block]
  pageInfo: PageInfo
}

"""Cursor based pagination"""
input PaginationInputs {
  cursor: String
  limit: Int!
}

type Query {
  getBlocks(BlockFilterInputs: BlockFilterInputs, PaginationFilterInputs: PaginationInputs!): PaginatedBlocks
  getCopyBlockById(id: String!): CopyBlock
  getCopyBlocks: [CopyBlock]
  getImageBlockById(id: String!): ImageBlock
  getImageBlocks: [ImageBlock]
  getLinkBlockById(id: String!): LinkBlock
  getLinkBlocks: [LinkBlock]
  ok: Boolean!
}
